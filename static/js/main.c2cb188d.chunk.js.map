{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovieToFavorites","useState","searchTerm","setSearchTerm","foundedMovie","setFoundedMovie","isLoading","setIsLoading","hasError","setHasError","searchHandler","a","query","fetch","then","res","json","catch","Response","Error","newMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","disabled","cn","onClick","preventDefault","App","moviesFavoriteList","setMoviesFavoriteList","prevList","some","newFavoriteList","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2cb188d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovieToFavorites: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovieToFavorites }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [foundedMovie, setFoundedMovie] = useState<Movie | null>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const searchHandler = async () => {\n    setIsLoading(true);\n\n    try {\n      const res = await getMovie(searchTerm);\n\n      if ('Title' in res) {\n        const newMovie: Movie = {\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: res.Poster !== 'N/A'\n            ? res.Poster\n            : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          imdbId: res.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n        };\n\n        setFoundedMovie(newMovie);\n      } else {\n        setHasError(true);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchTerm}\n              onChange={(event) => {\n                setSearchTerm(event.target.value);\n                setHasError(false);\n                setFoundedMovie(null);\n              }}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!searchTerm}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', { 'is-loading': isLoading })}\n              onClick={(event) => {\n                event.preventDefault();\n                searchHandler();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {foundedMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (foundedMovie) {\n                    onAddMovieToFavorites(foundedMovie);\n                  }\n\n                  setSearchTerm('');\n                  setFoundedMovie(null);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundedMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=da4831c8';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [moviesFavoriteList, setMoviesFavoriteList] = useState<Movie[]>([]);\n\n  const onAddMovieToFavorites = (newMovie: Movie) => {\n    setMoviesFavoriteList((prevList: Movie[]) => {\n      if (prevList.some(movie => movie.imdbId === newMovie.imdbId)) {\n        return prevList;\n      }\n\n      const newFavoriteList = prevList\n        .map((movie:Movie) => ({ ...movie }));\n\n      newFavoriteList.push({ ...newMovie });\n\n      return newFavoriteList;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesFavoriteList} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovieToFavorites={onAddMovieToFavorites} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}